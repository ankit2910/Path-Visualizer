{"ast":null,"code":"import _objectSpread from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\Projects\\\\pathvisualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Node from'./Node/Node';import{dijkstra}from'../algorithms/dijkstra';import{AStar}from'../algorithms/aStar';import{dfs}from'../algorithms/dfs';import{bfs}from'../algorithms/bfs';import'./PathfindingVisualizer.css';var PathfindingVisualizer=/*#__PURE__*/function(_Component){_inherits(PathfindingVisualizer,_Component);var _super=_createSuper(PathfindingVisualizer);function PathfindingVisualizer(){var _this;_classCallCheck(this,PathfindingVisualizer);_this=_super.call(this);/******************** Set up the initial grid ********************/_this.getInitialGrid=function(){var rowCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_this.state.ROW_COUNT;var colCount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_this.state.COLUMN_COUNT;var initialGrid=[];for(var row=0;row<rowCount;row++){var currentRow=[];for(var col=0;col<colCount;col++){currentRow.push(_this.createNode(row,col));}initialGrid.push(currentRow);}return initialGrid;};_this.createNode=function(row,col){return{row:row,col:col,isStart:row===_this.state.START_NODE_ROW&&col===_this.state.START_NODE_COL,isFinish:row===_this.state.FINISH_NODE_ROW&&col===_this.state.FINISH_NODE_COL,// to be used in dijkstra, bfs and dfs  \ndistance:Infinity,// to be used in A star\ndistanceToFinishNode:Math.abs(_this.state.FINISH_NODE_ROW-row)+Math.abs(_this.state.FINISH_NODE_COL-col),isVisited:false,isWall:false,previousNode:null,isNode:true};};_this.state={grid:[],START_NODE_ROW:0,FINISH_NODE_ROW:5,START_NODE_COL:0,FINISH_NODE_COL:15,mouseIsPressed:false,ROW_COUNT:25,COLUMN_COUNT:35,MOBILE_ROW_COUNT:10,MOBILE_COLUMN_COUNT:20,isRunning:false,isStartNode:false,isFinishNode:false,isWallNode:false,// xxxxxxx\ncurrRow:0,currCol:0,isDesktopView:true};_this.handleMouseDown=_this.handleMouseDown.bind(_assertThisInitialized(_this));_this.handleMouseLeave=_this.handleMouseLeave.bind(_assertThisInitialized(_this));_this.toggleIsRunning=_this.toggleIsRunning.bind(_assertThisInitialized(_this));return _this;}_createClass(PathfindingVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=this.getInitialGrid();this.setState({grid:grid});}},{key:\"toggleIsRunning\",value:function toggleIsRunning(){this.setState({isRunning:!this.state.isRunning});}},{key:\"toggleView\",value:function toggleView(){if(!this.state.isRunning){this.clearGrid();this.clearWalls();var isDesktopView=!this.state.isDesktopView;var grid;if(isDesktopView){grid=this.getInitialGrid(this.state.ROW_COUNT,this.state.COLUMN_COUNT);this.setState({isDesktopView:isDesktopView,grid:grid});}else{if(this.state.START_NODE_ROW>this.state.MOBILE_ROW_COUNT||this.state.FINISH_NODE_ROW>this.state.MOBILE_ROW_COUNT||this.state.START_NODE_COL>this.state.MOBILE_COLUMN_COUNT||this.state.FINISH_NODE_COL>this.state.MOBILE_COLUMN_COUNT){alert('Start & Finish Nodes Must Be within 10 Rows x 20 Columns');}else{grid=this.getInitialGrid(this.state.MOBILE_ROW_COUNT,this.state.MOBILE_COLUMN_COUNT);this.setState({isDesktopView:isDesktopView,grid:grid});}}}}},{key:\"handleMouseDown\",value:/******************** Control mouse events ********************/function handleMouseDown(row,col){if(!this.state.isRunning){if(this.isGridClear()){if(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='node node-start'){this.setState({mouseIsPressed:true,isStartNode:true,currRow:row,currCol:col});}else if(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='node node-finish'){this.setState({mouseIsPressed:true,isFinishNode:true,currRow:row,currCol:col});}else{var newGrid=getNewGridWithWallToggled(this.state.grid,row,col);this.setState({grid:newGrid,mouseIsPressed:true,isWallNode:true,currRow:row,currCol:col});}}else{this.clearGrid();}}}},{key:\"isGridClear\",value:function isGridClear(){var _iterator=_createForOfIteratorHelper(this.state.grid),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var row=_step.value;var _iterator2=_createForOfIteratorHelper(row),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var node=_step2.value;var nodeClassName=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className;if(nodeClassName==='node node-visited'||nodeClassName==='node node-shortest-path'){return false;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return true;}},{key:\"handleMouseEnter\",value:function handleMouseEnter(row,col){if(!this.state.isRunning){if(this.state.mouseIsPressed){var nodeClassName=document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className;if(this.state.isStartNode){if(nodeClassName!=='node node-wall'){var prevStartNode=this.state.grid[this.state.currRow][this.state.currCol];prevStartNode.isStart=false;document.getElementById(\"node-\".concat(this.state.currRow,\"-\").concat(this.state.currCol)).className='node';this.setState({currRow:row,currCol:col});var currStartNode=this.state.grid[row][col];currStartNode.isStart=true;document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='node node-start';}this.setState({START_NODE_ROW:row,START_NODE_COL:col});}else if(this.state.isFinishNode){if(nodeClassName!=='node node-wall'){var prevFinishNode=this.state.grid[this.state.currRow][this.state.currCol];prevFinishNode.isFinish=false;document.getElementById(\"node-\".concat(this.state.currRow,\"-\").concat(this.state.currCol)).className='node';this.setState({currRow:row,currCol:col});var currFinishNode=this.state.grid[row][col];currFinishNode.isFinish=true;document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='node node-finish';}this.setState({FINISH_NODE_ROW:row,FINISH_NODE_COL:col});}else if(this.state.isWallNode){var newGrid=getNewGridWithWallToggled(this.state.grid,row,col);this.setState({grid:newGrid});}}}}},{key:\"handleMouseUp\",value:function handleMouseUp(row,col){if(!this.state.isRunning){this.setState({mouseIsPressed:false});if(this.state.isStartNode){var isStartNode=!this.state.isStartNode;this.setState({isStartNode:isStartNode,START_NODE_ROW:row,START_NODE_COL:col});}else if(this.state.isFinishNode){var isFinishNode=!this.state.isFinishNode;this.setState({isFinishNode:isFinishNode,FINISH_NODE_ROW:row,FINISH_NODE_COL:col});}this.getInitialGrid();}}},{key:\"handleMouseLeave\",value:function handleMouseLeave(){if(this.state.isStartNode){var isStartNode=!this.state.isStartNode;this.setState({isStartNode:isStartNode,mouseIsPressed:false});}else if(this.state.isFinishNode){var isFinishNode=!this.state.isFinishNode;this.setState({isFinishNode:isFinishNode,mouseIsPressed:false});}else if(this.state.isWallNode){var isWallNode=!this.state.isWallNode;this.setState({isWallNode:isWallNode,mouseIsPressed:false});this.getInitialGrid();}}/******************** Clear Board/Walls ********************/},{key:\"clearGrid\",value:function clearGrid(){if(!this.state.isRunning){var newGrid=this.state.grid.slice();var _iterator3=_createForOfIteratorHelper(newGrid),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var row=_step3.value;var _iterator4=_createForOfIteratorHelper(row),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var node=_step4.value;var nodeClassName=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className;if(nodeClassName!=='node node-start'&&nodeClassName!=='node node-finish'&&nodeClassName!=='node node-wall'){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node';node.isVisited=false;node.distance=Infinity;node.distanceToFinishNode=Math.abs(this.state.FINISH_NODE_ROW-node.row)+Math.abs(this.state.FINISH_NODE_COL-node.col);}if(nodeClassName==='node node-finish'){node.isVisited=false;node.distance=Infinity;node.distanceToFinishNode=0;}if(nodeClassName==='node node-start'){node.isVisited=false;node.distance=Infinity;node.distanceToFinishNode=Math.abs(this.state.FINISH_NODE_ROW-node.row)+Math.abs(this.state.FINISH_NODE_COL-node.col);node.isStart=true;node.isWall=false;node.previousNode=null;node.isNode=true;}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}},{key:\"clearWalls\",value:function clearWalls(){if(!this.state.isRunning){var newGrid=this.state.grid.slice();var _iterator5=_createForOfIteratorHelper(newGrid),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var row=_step5.value;var _iterator6=_createForOfIteratorHelper(row),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var node=_step6.value;var nodeClassName=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className;if(nodeClassName==='node node-wall'){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node';node.isWall=false;}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}}/******************** Create Animations ********************/},{key:\"visualize\",value:function visualize(algo){if(!this.state.isRunning){this.clearGrid();this.toggleIsRunning();var grid=this.state.grid;var startNode=grid[this.state.START_NODE_ROW][this.state.START_NODE_COL];var finishNode=grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];var visitedNodesInOrder;switch(algo){case'Dijkstra':visitedNodesInOrder=dijkstra(grid,startNode,finishNode);break;case'AStar':visitedNodesInOrder=AStar(grid,startNode,finishNode);break;case'BFS':visitedNodesInOrder=bfs(grid,startNode,finishNode);break;case'DFS':visitedNodesInOrder=dfs(grid,startNode,finishNode);break;default:// should never get here\nbreak;}var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);nodesInShortestPathOrder.push('end');this.animate(visitedNodesInOrder,nodesInShortestPathOrder);}}},{key:\"animate\",value:function animate(visitedNodesInOrder,nodesInShortestPathOrder){var _this2=this;var _loop=function _loop(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this2.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];var nodeClassName=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className;if(nodeClassName!=='node node-start'&&nodeClassName!=='node node-finish'){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';}},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}}/******************** Create path from start to finish ********************/},{key:\"animateShortestPath\",value:function animateShortestPath(nodesInShortestPathOrder){var _this3=this;var _loop2=function _loop2(i){if(nodesInShortestPathOrder[i]==='end'){setTimeout(function(){_this3.toggleIsRunning();},i*50);}else{setTimeout(function(){var node=nodesInShortestPathOrder[i];var nodeClassName=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className;if(nodeClassName!=='node node-start'&&nodeClassName!=='node node-finish'){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-shortest-path';}},i*40);}};for(var i=0;i<nodesInShortestPathOrder.length;i++){_loop2(i);}}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,grid=_this$state.grid,mouseIsPressed=_this$state.mouseIsPressed;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar navbar-expand-lg navbar-dark bg-dark \"},/*#__PURE__*/React.createElement(\"a\",{className:\"navbar-brand\",href:\"/\"},/*#__PURE__*/React.createElement(\"b\",null,\"PathFinding Visualizer\")),/*#__PURE__*/React.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-toggle\":\"collapse\",\"data-target\":\"#navbarNav\",\"aria-controls\":\"navbarNav\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\"},/*#__PURE__*/React.createElement(\"span\",{className:\"navbar-toggler-icon\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarNav\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link\",href:\"https://github.com/siddhant-dutta/PathFindingVisualizer\"},' ',\"PathFinder Visualizer code\",' '))))),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:function onClick(){return _this4.clearGrid();}},\"Clear Grid\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-warning\",onClick:function onClick(){return _this4.clearWalls();}},\"Clear Walls\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:function onClick(){return _this4.visualize('Dijkstra');}},\"Dijkstra's\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:function onClick(){return _this4.visualize('AStar');}},\"A*\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:function onClick(){return _this4.visualize('BFS');}},\"Bread First Search\"),this.state.isDesktopView?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:function onClick(){return _this4.toggleView();}},\"Mobile View\"):/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-dark\",onClick:function onClick(){return _this4.toggleView();}},\"Desktop View\"),/*#__PURE__*/React.createElement(\"table\",{className:\"grid-container\",onMouseLeave:function onMouseLeave(){return _this4.handleMouseLeave();}},/*#__PURE__*/React.createElement(\"tbody\",{className:\"grid\"},grid.map(function(row,rowIdx){return/*#__PURE__*/React.createElement(\"tr\",{key:rowIdx},row.map(function(node,nodeIdx){var row=node.row,col=node.col,isFinish=node.isFinish,isStart=node.isStart,isWall=node.isWall;return/*#__PURE__*/React.createElement(Node,{key:nodeIdx,col:col,isFinish:isFinish,isStart:isStart,isWall:isWall,mouseIsPressed:mouseIsPressed,onMouseDown:function onMouseDown(row,col){return _this4.handleMouseDown(row,col);},onMouseEnter:function onMouseEnter(row,col){return _this4.handleMouseEnter(row,col);},onMouseUp:function onMouseUp(){return _this4.handleMouseUp(row,col);},row:row});}));}))));}}]);return PathfindingVisualizer;}(Component);/******************** Create Walls ********************/export{PathfindingVisualizer as default};var getNewGridWithWallToggled=function getNewGridWithWallToggled(grid,row,col){// mouseDown starts to act strange if I don't make newGrid and work off of grid instead.\nvar newGrid=grid.slice();var node=newGrid[row][col];if(!node.isStart&&!node.isFinish&&node.isNode){var newNode=_objectSpread(_objectSpread({},node),{},{isWall:!node.isWall});newGrid[row][col]=newNode;}return newGrid;};// Backtracks from the finishNode to find the shortest path.\n// Only works when called after the pathfinding methods.\nfunction getNodesInShortestPathOrder(finishNode){var nodesInShortestPathOrder=[];var currentNode=finishNode;while(currentNode!==null){nodesInShortestPathOrder.unshift(currentNode);currentNode=currentNode.previousNode;}return nodesInShortestPathOrder;}","map":{"version":3,"names":["React","Component","Node","dijkstra","AStar","dfs","bfs","PathfindingVisualizer","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","getInitialGrid","rowCount","arguments","length","undefined","state","ROW_COUNT","colCount","COLUMN_COUNT","initialGrid","row","currentRow","col","push","createNode","isStart","START_NODE_ROW","START_NODE_COL","isFinish","FINISH_NODE_ROW","FINISH_NODE_COL","distance","Infinity","distanceToFinishNode","Math","abs","isVisited","isWall","previousNode","isNode","grid","mouseIsPressed","MOBILE_ROW_COUNT","MOBILE_COLUMN_COUNT","isRunning","isStartNode","isFinishNode","isWallNode","currRow","currCol","isDesktopView","handleMouseDown","bind","_assertThisInitialized","handleMouseLeave","toggleIsRunning","_createClass","key","value","componentDidMount","setState","toggleView","clearGrid","clearWalls","alert","isGridClear","document","getElementById","concat","className","newGrid","getNewGridWithWallToggled","_iterator","_createForOfIteratorHelper","_step","s","n","done","_iterator2","_step2","node","nodeClassName","err","e","f","handleMouseEnter","prevStartNode","currStartNode","prevFinishNode","currFinishNode","handleMouseUp","slice","_iterator3","_step3","_iterator4","_step4","_iterator5","_step5","_iterator6","_step6","visualize","algo","startNode","finishNode","visitedNodesInOrder","nodesInShortestPathOrder","getNodesInShortestPathOrder","animate","_this2","_loop","i","setTimeout","animateShortestPath","v","_ret","_this3","_loop2","render","_this4","_this$state","createElement","href","type","id","onClick","onMouseLeave","map","rowIdx","nodeIdx","onMouseDown","onMouseEnter","onMouseUp","default","newNode","_objectSpread","currentNode","unshift"],"sources":["E:/Projects/pathvisualizer/src/PathfindingVisualizer/PathfindingVisualizer.jsx"],"sourcesContent":["import React, {Component} from 'react';\r\nimport Node from './Node/Node';\r\nimport {dijkstra} from '../algorithms/dijkstra';\r\nimport {AStar} from '../algorithms/aStar';\r\nimport {dfs} from '../algorithms/dfs';\r\nimport {bfs} from '../algorithms/bfs';\r\n\r\nimport './PathfindingVisualizer.css';\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      grid: [],\r\n      START_NODE_ROW: 0,\r\n      FINISH_NODE_ROW: 5,\r\n      START_NODE_COL: 0,\r\n      FINISH_NODE_COL: 15,\r\n      mouseIsPressed: false,\r\n      ROW_COUNT: 25,\r\n      COLUMN_COUNT: 35,\r\n      MOBILE_ROW_COUNT: 10,\r\n      MOBILE_COLUMN_COUNT: 20,\r\n      isRunning: false,\r\n      isStartNode: false,\r\n      isFinishNode: false,\r\n      isWallNode: false, // xxxxxxx\r\n      currRow: 0,\r\n      currCol: 0,\r\n      isDesktopView: true,\r\n    };\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    this.toggleIsRunning = this.toggleIsRunning.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const grid = this.getInitialGrid();\r\n    this.setState({grid});\r\n  }\r\n\r\n  toggleIsRunning() {\r\n    this.setState({isRunning: !this.state.isRunning});\r\n  }\r\n\r\n  toggleView() {\r\n    if (!this.state.isRunning) {\r\n      this.clearGrid();\r\n      this.clearWalls();\r\n      const isDesktopView = !this.state.isDesktopView;\r\n      let grid;\r\n      if (isDesktopView) {\r\n        grid = this.getInitialGrid(\r\n          this.state.ROW_COUNT,\r\n          this.state.COLUMN_COUNT,\r\n        );\r\n        this.setState({isDesktopView, grid});\r\n      } else {\r\n        if (\r\n          this.state.START_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\r\n          this.state.FINISH_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\r\n          this.state.START_NODE_COL > this.state.MOBILE_COLUMN_COUNT ||\r\n          this.state.FINISH_NODE_COL > this.state.MOBILE_COLUMN_COUNT\r\n        ) {\r\n          alert('Start & Finish Nodes Must Be within 10 Rows x 20 Columns');\r\n        } else {\r\n          grid = this.getInitialGrid(\r\n            this.state.MOBILE_ROW_COUNT,\r\n            this.state.MOBILE_COLUMN_COUNT,\r\n          );\r\n          this.setState({isDesktopView, grid});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /******************** Set up the initial grid ********************/\r\n  getInitialGrid = (\r\n    rowCount = this.state.ROW_COUNT,\r\n    colCount = this.state.COLUMN_COUNT,\r\n  ) => {\r\n    const initialGrid = [];\r\n    for (let row = 0; row < rowCount; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < colCount; col++) {\r\n        currentRow.push(this.createNode(row, col));\r\n      }\r\n      initialGrid.push(currentRow);\r\n    }\r\n    return initialGrid;\r\n  };\r\n\r\n  createNode = (row, col) => {\r\n    return {\r\n      row,\r\n      col,\r\n      isStart:\r\n        row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\r\n      isFinish:\r\n        row === this.state.FINISH_NODE_ROW &&\r\n        col === this.state.FINISH_NODE_COL,\r\n      // to be used in dijkstra, bfs and dfs  \r\n      distance: Infinity,\r\n      // to be used in A star\r\n      distanceToFinishNode:\r\n        Math.abs(this.state.FINISH_NODE_ROW - row) +\r\n        Math.abs(this.state.FINISH_NODE_COL - col),\r\n\r\n      isVisited: false,\r\n      isWall: false,\r\n      previousNode: null,\r\n      isNode: true,\r\n    };\r\n  };\r\n\r\n  /******************** Control mouse events ********************/\r\n  handleMouseDown(row, col) {\r\n    if (!this.state.isRunning) {\r\n      if (this.isGridClear()) {\r\n        if (\r\n          document.getElementById(`node-${row}-${col}`).className ===\r\n          'node node-start'\r\n        ) {\r\n          this.setState({\r\n            mouseIsPressed: true,\r\n            isStartNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          });\r\n        } else if (\r\n          document.getElementById(`node-${row}-${col}`).className ===\r\n          'node node-finish'\r\n        ) {\r\n          this.setState({\r\n            mouseIsPressed: true,\r\n            isFinishNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          });\r\n        } else {\r\n          const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n          this.setState({\r\n            grid: newGrid,\r\n            mouseIsPressed: true,\r\n            isWallNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          });\r\n        }\r\n      } else {\r\n        this.clearGrid();\r\n      }\r\n    }\r\n  }\r\n\r\n  isGridClear() {\r\n    for (const row of this.state.grid) {\r\n      for (const node of row) {\r\n        const nodeClassName = document.getElementById(\r\n          `node-${node.row}-${node.col}`,\r\n        ).className;\r\n        if (\r\n          nodeClassName === 'node node-visited' ||\r\n          nodeClassName === 'node node-shortest-path'\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.isRunning) {\r\n      if (this.state.mouseIsPressed) {\r\n        const nodeClassName = document.getElementById(`node-${row}-${col}`)\r\n          .className;\r\n        if (this.state.isStartNode) {\r\n          if (nodeClassName !== 'node node-wall') {\r\n            const prevStartNode = this.state.grid[this.state.currRow][\r\n              this.state.currCol\r\n            ];\r\n            prevStartNode.isStart = false;\r\n            document.getElementById(\r\n              `node-${this.state.currRow}-${this.state.currCol}`,\r\n            ).className = 'node';\r\n\r\n            this.setState({currRow: row, currCol: col});\r\n            const currStartNode = this.state.grid[row][col];\r\n            currStartNode.isStart = true;\r\n            document.getElementById(`node-${row}-${col}`).className =\r\n              'node node-start';\r\n          }\r\n          this.setState({START_NODE_ROW: row, START_NODE_COL: col});\r\n        } else if (this.state.isFinishNode) {\r\n          if (nodeClassName !== 'node node-wall') {\r\n            const prevFinishNode = this.state.grid[this.state.currRow][\r\n              this.state.currCol\r\n            ];\r\n            prevFinishNode.isFinish = false;\r\n            document.getElementById(\r\n              `node-${this.state.currRow}-${this.state.currCol}`,\r\n            ).className = 'node';\r\n\r\n            this.setState({currRow: row, currCol: col});\r\n            const currFinishNode = this.state.grid[row][col];\r\n            currFinishNode.isFinish = true;\r\n            document.getElementById(`node-${row}-${col}`).className =\r\n              'node node-finish';\r\n          }\r\n          this.setState({FINISH_NODE_ROW: row, FINISH_NODE_COL: col});\r\n        } else if (this.state.isWallNode) {\r\n          const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n          this.setState({grid: newGrid});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseUp(row, col) {\r\n    if (!this.state.isRunning) {\r\n      this.setState({mouseIsPressed: false});\r\n      if (this.state.isStartNode) {\r\n        const isStartNode = !this.state.isStartNode;\r\n        this.setState({isStartNode, START_NODE_ROW: row, START_NODE_COL: col});\r\n      } else if (this.state.isFinishNode) {\r\n        const isFinishNode = !this.state.isFinishNode;\r\n        this.setState({\r\n          isFinishNode,\r\n          FINISH_NODE_ROW: row,\r\n          FINISH_NODE_COL: col,\r\n        });\r\n      }\r\n      this.getInitialGrid();\r\n    }\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    if (this.state.isStartNode) {\r\n      const isStartNode = !this.state.isStartNode;\r\n      this.setState({isStartNode, mouseIsPressed: false});\r\n    } else if (this.state.isFinishNode) {\r\n      const isFinishNode = !this.state.isFinishNode;\r\n      this.setState({isFinishNode, mouseIsPressed: false});\r\n    } else if (this.state.isWallNode) {\r\n      const isWallNode = !this.state.isWallNode;\r\n      this.setState({isWallNode, mouseIsPressed: false});\r\n      this.getInitialGrid();\r\n    }\r\n  }\r\n\r\n  /******************** Clear Board/Walls ********************/\r\n\r\n  clearGrid() {\r\n    if (!this.state.isRunning) {\r\n      const newGrid = this.state.grid.slice();\r\n      for (const row of newGrid) {\r\n        for (const node of row) {\r\n          let nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`,\r\n          ).className;\r\n          if (\r\n            nodeClassName !== 'node node-start' &&\r\n            nodeClassName !== 'node node-finish' &&\r\n            nodeClassName !== 'node node-wall'\r\n          ) {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node';\r\n            node.isVisited = false;\r\n            node.distance = Infinity;\r\n            node.distanceToFinishNode =\r\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\r\n              Math.abs(this.state.FINISH_NODE_COL - node.col);\r\n          }\r\n          if (nodeClassName === 'node node-finish') {\r\n            node.isVisited = false;\r\n            node.distance = Infinity;\r\n            node.distanceToFinishNode = 0;\r\n          }\r\n          if (nodeClassName === 'node node-start') {\r\n            node.isVisited = false;\r\n            node.distance = Infinity;\r\n            node.distanceToFinishNode =\r\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\r\n              Math.abs(this.state.FINISH_NODE_COL - node.col);\r\n            node.isStart = true;\r\n            node.isWall = false;\r\n            node.previousNode = null;\r\n            node.isNode = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clearWalls() {\r\n    if (!this.state.isRunning) {\r\n      const newGrid = this.state.grid.slice();\r\n      for (const row of newGrid) {\r\n        for (const node of row) {\r\n          let nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`,\r\n          ).className;\r\n          if (nodeClassName === 'node node-wall') {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node';\r\n            node.isWall = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /******************** Create Animations ********************/\r\n  visualize(algo) {\r\n    if (!this.state.isRunning) {\r\n      this.clearGrid();\r\n      this.toggleIsRunning();\r\n      const {grid} = this.state;\r\n      const startNode =\r\n        grid[this.state.START_NODE_ROW][this.state.START_NODE_COL];\r\n      const finishNode =\r\n        grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];\r\n      let visitedNodesInOrder;\r\n      switch (algo) {\r\n        case 'Dijkstra':\r\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n          break;\r\n        case 'AStar':\r\n          visitedNodesInOrder = AStar(grid, startNode, finishNode);\r\n          break;\r\n        case 'BFS':\r\n          visitedNodesInOrder = bfs(grid, startNode, finishNode);\r\n          break;\r\n        case 'DFS':\r\n          visitedNodesInOrder = dfs(grid, startNode, finishNode);\r\n          break;\r\n        default:\r\n          // should never get here\r\n          break;\r\n      }\r\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n      nodesInShortestPathOrder.push('end');\r\n      this.animate(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n  }\r\n\r\n  animate(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 10 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        const nodeClassName = document.getElementById(\r\n          `node-${node.row}-${node.col}`,\r\n        ).className;\r\n        if (\r\n          nodeClassName !== 'node node-start' &&\r\n          nodeClassName !== 'node node-finish'\r\n        ) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-visited';\r\n        }\r\n      }, 10 * i);\r\n    }\r\n  }\r\n\r\n  /******************** Create path from start to finish ********************/\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      if (nodesInShortestPathOrder[i] === 'end') {\r\n        setTimeout(() => {\r\n          this.toggleIsRunning();\r\n        }, i * 50);\r\n      } else {\r\n        setTimeout(() => {\r\n          const node = nodesInShortestPathOrder[i];\r\n          const nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`,\r\n          ).className;\r\n          if (\r\n            nodeClassName !== 'node node-start' &&\r\n            nodeClassName !== 'node node-finish'\r\n          ) {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-shortest-path';\r\n          }\r\n        }, i * 40);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {grid, mouseIsPressed} = this.state;\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <b>PathFinding Visualizer</b>\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"https://github.com/siddhant-dutta/PathFindingVisualizer\">\r\n                  {' '}\r\n                  PathFinder Visualizer code{' '}\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"https://prudhvignv.github.io\">\r\n                  Check Out Other Cool Projects\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => this.clearGrid()}>\r\n          Clear Grid\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning\"\r\n          onClick={() => this.clearWalls()}>\r\n          Clear Walls\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.visualize('Dijkstra')}>\r\n          Dijkstra's\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.visualize('AStar')}>\r\n          A*\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.visualize('BFS')}>\r\n          Bread First Search\r\n        </button>\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.visualize('DFS')}>\r\n          Depth First Search\r\n        </button> */}\r\n        {this.state.isDesktopView ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={() => this.toggleView()}>\r\n            Mobile View\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={() => this.toggleView()}>\r\n            Desktop View\r\n          </button>\r\n        )}\r\n\r\n        <table\r\n          className=\"grid-container\"\r\n          onMouseLeave={() => this.handleMouseLeave()}>\r\n          <tbody className=\"grid\">\r\n            {grid.map((row, rowIdx) => {\r\n              return (\r\n                <tr key={rowIdx}>\r\n                  {row.map((node, nodeIdx) => {\r\n                    const {row, col, isFinish, isStart, isWall} = node;\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={isWall}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp(row, col)}\r\n                        row={row}></Node>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/******************** Create Walls ********************/\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  // mouseDown starts to act strange if I don't make newGrid and work off of grid instead.\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (!node.isStart && !node.isFinish && node.isNode) {\r\n    const newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n  }\r\n  return newGrid;\r\n};\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called after the pathfinding methods.\r\nfunction getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}