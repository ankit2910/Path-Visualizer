{"ast":null,"code":"// Returns all nodes in the order in which they were visited.\n// Make nodes point back to their previous node so that we can compute the shortest path\n// by backtracking from the finish node.\nexport function dfs(grid,startNode,finishNode){var visitedNodesInOrder=[];var nextNodesStack=[];nextNodesStack.push(startNode);while(nextNodesStack.length){var currentNode=nextNodesStack.pop();if(currentNode===finishNode){return visitedNodesInOrder;}if(!currentNode.isWall&&(currentNode.isStart||!currentNode.isVisited)){currentNode.isVisited=true;visitedNodesInOrder.push(currentNode);var col=currentNode.col,row=currentNode.row;var nextNode=void 0;if(row>0){nextNode=grid[row-1][col];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(row<grid.length-1){nextNode=grid[row+1][col];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(col>0){nextNode=grid[row][col-1];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}if(col<grid[0].length-1){nextNode=grid[row][col+1];if(!nextNode.isVisited){nextNode.previousNode=currentNode;nextNodesStack.push(nextNode);}}}}}","map":{"version":3,"names":["dfs","grid","startNode","finishNode","visitedNodesInOrder","nextNodesStack","push","length","currentNode","pop","isWall","isStart","isVisited","col","row","nextNode","previousNode"],"sources":["E:/Projects/pathvisualizer/src/algorithms/dfs.js"],"sourcesContent":["// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function dfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  const nextNodesStack = [];\r\n  nextNodesStack.push(startNode);\r\n  while (nextNodesStack.length) {\r\n    const currentNode = nextNodesStack.pop();\r\n\r\n    if (currentNode === finishNode) {\r\n      return visitedNodesInOrder;\r\n    }\r\n\r\n    if (\r\n      !currentNode.isWall &&\r\n      (currentNode.isStart || !currentNode.isVisited)\r\n    ) {\r\n      currentNode.isVisited = true;\r\n      visitedNodesInOrder.push(currentNode);\r\n\r\n      const {col, row} = currentNode;\r\n      let nextNode;\r\n      if (row > 0) {\r\n        nextNode = grid[row - 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (row < grid.length - 1) {\r\n        nextNode = grid[row + 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col > 0) {\r\n        nextNode = grid[row][col - 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col < grid[0].length - 1) {\r\n        nextNode = grid[row][col + 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AAEA,MAAO,SAAS,CAAAA,GAAGA,CAACC,IAAI,CAAEC,SAAS,CAAEC,UAAU,CAAE,CAC/C,GAAM,CAAAC,mBAAmB,CAAG,EAAE,CAC9B,GAAM,CAAAC,cAAc,CAAG,EAAE,CACzBA,cAAc,CAACC,IAAI,CAACJ,SAAS,CAAC,CAC9B,MAAOG,cAAc,CAACE,MAAM,CAAE,CAC5B,GAAM,CAAAC,WAAW,CAAGH,cAAc,CAACI,GAAG,CAAC,CAAC,CAExC,GAAID,WAAW,GAAKL,UAAU,CAAE,CAC9B,MAAO,CAAAC,mBAAmB,CAC5B,CAEA,GACE,CAACI,WAAW,CAACE,MAAM,GAClBF,WAAW,CAACG,OAAO,EAAI,CAACH,WAAW,CAACI,SAAS,CAAC,CAC/C,CACAJ,WAAW,CAACI,SAAS,CAAG,IAAI,CAC5BR,mBAAmB,CAACE,IAAI,CAACE,WAAW,CAAC,CAErC,GAAO,CAAAK,GAAG,CAASL,WAAW,CAAvBK,GAAG,CAAEC,GAAG,CAAIN,WAAW,CAAlBM,GAAG,CACf,GAAI,CAAAC,QAAQ,QACZ,GAAID,GAAG,CAAG,CAAC,CAAE,CACXC,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACH,SAAS,CAAE,CACvBG,QAAQ,CAACC,YAAY,CAAGR,WAAW,CACnCH,cAAc,CAACC,IAAI,CAACS,QAAQ,CAAC,CAC/B,CACF,CACA,GAAID,GAAG,CAAGb,IAAI,CAACM,MAAM,CAAG,CAAC,CAAE,CACzBQ,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACH,SAAS,CAAE,CACvBG,QAAQ,CAACC,YAAY,CAAGR,WAAW,CACnCH,cAAc,CAACC,IAAI,CAACS,QAAQ,CAAC,CAC/B,CACF,CACA,GAAIF,GAAG,CAAG,CAAC,CAAE,CACXE,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACH,SAAS,CAAE,CACvBG,QAAQ,CAACC,YAAY,CAAGR,WAAW,CACnCH,cAAc,CAACC,IAAI,CAACS,QAAQ,CAAC,CAC/B,CACF,CACA,GAAIF,GAAG,CAAGZ,IAAI,CAAC,CAAC,CAAC,CAACM,MAAM,CAAG,CAAC,CAAE,CAC5BQ,QAAQ,CAAGd,IAAI,CAACa,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAC7B,GAAI,CAACE,QAAQ,CAACH,SAAS,CAAE,CACvBG,QAAQ,CAACC,YAAY,CAAGR,WAAW,CACnCH,cAAc,CAACC,IAAI,CAACS,QAAQ,CAAC,CAC/B,CACF,CACF,CACF,CACF"},"metadata":{},"sourceType":"module"}